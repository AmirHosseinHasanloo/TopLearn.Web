@model TopLearn.Core.DTOs.Course.addEpisodeViewModel
@{
    ViewData["Title"] = "افزودن قسمت جدید";
    Layout = "~/Views/Shared/_DefaultLayout.cshtml";
}
<div class="container">
    <nav aria-label="breadcrumb">
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">تاپ لرن</a></li>
            <li class="breadcrumb-item active" aria-current="page"> @ViewData["Title"] </li>
        </ul>
    </nav>
</div>

<main>
    <div class="container">
        <div class="user-account">
            <div class="row">
                <partial name="_UserPanelSideBar" />
                <div class="col-md-9 col-sm-8 col-xs-12">
                    <section class="user-account-content">
                        <header>
                            <h1> @ViewData["Title"] </h1>
                        </header>
                        <div class="inner form-layer">
                            <form asp-action="EditProfile" method="post" enctype="multipart/form-data">
                                <input type="hidden" asp-for="CourseId" />
                                <input type="hidden" asp-for="EpisodeFileName" />
                                <div class="row">
                                    <div class="col-md-7 col-sm-8 col-xs-12">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="username"><i class="zmdi zmdi-file"></i></span>
                                            <input asp-for="EpisodeTitle" type="text" class="form-control" placeholder="عنوان جلسه" aria-describedby="username">
                                        </div>
                                        <span asp-validation-for="EpisodeTitle" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-7 col-sm-8 col-xs-12">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="email-address">
                                                <i class="zmdi zmdi-time"></i>
                                            </span>
                                            <input asp-for="EpisodeTime" class="form-control" placeholder="00:00:00" aria-describedby="email-address">
                                        </div>
                                        <span asp-validation-for="EpisodeTime" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-7 col-sm-8 col-xs-12">
                                        <div class="input-group">
                                            <label class="control-label">
                                                رایگان
                                            </label>
                                            <input asp-for="IsFree">
                                        </div>
                                        <span asp-validation-for="EpisodeTime" class="text-danger"></span>
                                    </div>

                                    <div class="input-group col-md-7 col-sm-8 col-xs-12 dropStyle">
                                        <div val-url="@Url.Action("DropzoneTarget", "Master", new { courseId = Model.CourseId })" class="dropzone mt-4" id="min-dropzone">
                                        </div>
                                    </div>

                                    <div class="col-md-7 col-sm-8 col-xs-12">
                                        <button id="SubmitBtn" class="btn btn-success"> افزودن </button>
                                    </div>
                                </div>

                            </form>
                        </div>
                    </section>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
 
    <script>
        Dropzone.autoDiscover = false;

        $(document).ready(function () {
            $("#min-dropzone").dropzone({
                maxFiles: 2000,
                url: "/ajax_file_upload_handler/",
                success: function (file, response) {
                    console.log(response);
                }
            });
        })

        function DropzoneParameterName() {
            return 'files';
        }

        Dropzone.options.mindropzone = {
            url: $("#min-dropzone").attr("val-url"),
            parallelUploads: 1, // How Many Files process in parallel
            uploadMultiple: true, // Add Multiple To fallback input - Cant Use With chunking
            maxFilesize: 100000000, // In byte - 100000000 is 100 mb
            paramName: DropzoneParameterName, // if uploadMultiple is true set as true for add [] in name
            maxFiles: 1, // If not null defines how many files this Dropzone handles. If it exceeds, the event maxfilesexceeded will be called.
            acceptedFiles: '.rar,.zip', // default is null - This is a comma separated list of mime types or file extensions [image/*,application/pdf,.psd]
            init: function () {
                this.on("errormultiple",
                    function (file, message) {
                        swal("Error", message, "error");
                    });
                this.on("sendingmultiple",
                    function (file) {
                        $("#SubmitBtn").prop("disabled", true);
                    });
                this.on("queuecomplete",
                    function (file) {
                        $("#SubmitBtn").prop("disabled", false);
                    });
                this.on("successmultiple",
                    function (file, response) {
                        if (response.status === "Success") {
                            $("#EpisodeFileName").val(response.data);
                        } else {
                            swal("Error", "عملیات با خطا مواجه شد .", "error");
                        }
                    });
                this.on("maxfilesreached",
                    function (file) {
                        this.removeEventListeners();
                    });
            }
        }

    </script>
}
